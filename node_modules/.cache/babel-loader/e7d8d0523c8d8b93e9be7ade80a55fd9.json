{"ast":null,"code":"import _classCallCheck from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/lala/spalifeandstory/src/components/Lead/Lead.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport LeadListing from \"./LeadListing\";\nimport LeadEdit from \"./LeadEdit\";\nimport MakeContextConsumer from \"../Auth/MakeContextConsumer\";\n\nvar Lead =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Lead, _Component);\n\n  function Lead(props) {\n    var _this;\n\n    _classCallCheck(this, Lead);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Lead).call(this, props));\n    _this.state = {\n      leads: []\n    };\n    _this.updateLeads = _this.updateLeads.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateLead = _this.updateLead.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getLead = _this.getLead.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateAllLeads = _this.updateAllLeads.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.routeToLeadEdit = _this.routeToLeadEdit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.routeToLeadListing = _this.routeToLeadListing.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Lead, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var $this = this;\n      console.log(this.props);\n      this.props.authAxios({\n        method: \"get\",\n        url: \"/api/v1/leads\"\n      }).then(function (response) {\n        $this.setState({\n          leads: response.data.data\n        });\n      });\n    }\n  }, {\n    key: \"updateLeads\",\n    value: function updateLeads(lead) {\n      var leads = this.state.leads;\n      leads.push(lead);\n      this.setState({\n        leads: leads\n      });\n    }\n  }, {\n    key: \"updateAllLeads\",\n    value: function updateAllLeads(leads) {\n      this.setState({\n        leads: leads\n      });\n    }\n  }, {\n    key: \"updateLead\",\n    value: function updateLead(lead) {\n      var _this2 = this;\n\n      console.log(lead);\n      var currentLead = lead;\n      var leads = this.state.leads;\n      leads.map(function (lead, index) {\n        if (lead.id == currentLead.id) {\n          leads[index] = currentLead;\n\n          _this2.setState({\n            leads: leads\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getLead\",\n    value: function getLead(id) {\n      var currentLead;\n      this.state.leads.map(function (lead) {\n        if (lead.id == id) {\n          currentLead = lead;\n        }\n      });\n      return currentLead;\n    }\n  }, {\n    key: \"routeToLeadEdit\",\n    value: function routeToLeadEdit(props) {\n      return React.createElement(LeadEdit, Object.assign({}, props, {\n        content: this.getLead(props.match.params.id),\n        updateLead: this.updateLead,\n        contentType: \"lead\",\n        authAxios: this.props.authAxios,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"routeToLeadListing\",\n    value: function routeToLeadListing(props) {\n      return React.createElement(LeadListing, {\n        match: this.props.match,\n        leads: this.state.leads,\n        updateLeads: this.updateLeads,\n        updateLead: this.updateLead,\n        updateAllLeads: this.updateAllLeads,\n        getLead: this.getLead,\n        authAxios: this.props.authAxios,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"\".concat(match.path),\n        exact: true,\n        component: this.routeToLeadListing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:id/leadedit\"),\n        exact: true,\n        component: this.routeToLeadEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), function () {\n        return console.log(\"caller\");\n      });\n    }\n  }]);\n\n  return Lead;\n}(Component);\n\nexport default MakeContextConsumer(Lead);","map":{"version":3,"sources":["/home/lala/spalifeandstory/src/components/Lead/Lead.js"],"names":["React","Component","Fragment","Route","LeadListing","LeadEdit","MakeContextConsumer","Lead","props","state","leads","updateLeads","bind","updateLead","getLead","updateAllLeads","routeToLeadEdit","routeToLeadListing","$this","console","log","authAxios","method","url","then","response","setState","data","lead","push","currentLead","map","index","id","match","params","path"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport LeadListing from \"./LeadListing\";\nimport LeadEdit from \"./LeadEdit\";\nimport MakeContextConsumer from \"../Auth/MakeContextConsumer\";\n\nclass Lead extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leads: []\n    };\n    this.updateLeads = this.updateLeads.bind(this);\n    this.updateLead = this.updateLead.bind(this);\n    this.getLead = this.getLead.bind(this);\n    this.updateAllLeads = this.updateAllLeads.bind(this);\n    this.routeToLeadEdit = this.routeToLeadEdit.bind(this);\n    this.routeToLeadListing = this.routeToLeadListing.bind(this);\n  }\n\n  componentDidMount() {\n    let $this = this;\n    console.log(this.props);\n    this.props\n      .authAxios({\n        method: \"get\",\n        url: \"/api/v1/leads\"\n      })\n      .then(function(response) {\n        $this.setState({\n          leads: response.data.data\n        });\n      });\n  }\n\n  updateLeads(lead) {\n    let leads = this.state.leads;\n    leads.push(lead);\n    this.setState({\n      leads: leads\n    });\n  }\n\n  updateAllLeads(leads) {\n    this.setState({\n      leads: leads\n    });\n  }\n\n  updateLead(lead) {\n    console.log(lead);\n    let currentLead = lead;\n    let leads = this.state.leads;\n    leads.map((lead, index) => {\n      if (lead.id == currentLead.id) {\n        leads[index] = currentLead;\n        this.setState({\n          leads: leads\n        });\n      }\n    });\n  }\n\n  getLead(id) {\n    let currentLead;\n    this.state.leads.map(function(lead) {\n      if (lead.id == id) {\n        currentLead = lead;\n      }\n    });\n    return currentLead;\n  }\n\n  routeToLeadEdit(props) {\n    return (\n      <LeadEdit\n        {...props}\n        content={this.getLead(props.match.params.id)}\n        updateLead={this.updateLead}\n        contentType=\"lead\"\n        authAxios={this.props.authAxios}\n      />\n    );\n  }\n\n  routeToLeadListing(props) {\n    return (\n      <LeadListing\n        match={this.props.match}\n        leads={this.state.leads}\n        updateLeads={this.updateLeads}\n        updateLead={this.updateLead}\n        updateAllLeads={this.updateAllLeads}\n        getLead={this.getLead}\n        authAxios={this.props.authAxios}\n      />\n    );\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <Fragment>\n        <Route\n          path={`${match.path}`}\n          exact\n          component={this.routeToLeadListing}\n        />\n        <Route\n          path={`${match.path}/:id/leadedit`}\n          exact\n          component={this.routeToLeadEdit}\n        />\n        {() => console.log(\"caller\")}\n      </Fragment>\n    );\n  }\n}\nexport default MakeContextConsumer(Lead);\n"]},"metadata":{},"sourceType":"module"}