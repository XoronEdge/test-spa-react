{"ast":null,"code":"import _classCallCheck from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/lala/spalifeandstory/src/components/Project/ClientProject.js\";\nimport React, { Component } from \"react\";\nimport HocForm from \"../Shared/HocForm\";\nimport { ProjectFields } from \"../../Utilities/FormsModel\";\nimport ProjectForm from \"./ProjectForm\";\nimport ListingTable from \"../Shared/ListingTable\";\nimport ProjectSmallRow from \"./ProjectSmallRow\";\n\nvar ClientProject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClientProject, _Component);\n\n  function ClientProject(props) {\n    var _this;\n\n    _classCallCheck(this, ClientProject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClientProject).call(this, props));\n    _this.state = {\n      modal: false,\n      projects: []\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addProjectCall = _this.addProjectCall.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchSubscription = _this.fetchSubscription.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showModal = _this.showModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderProjectSmallRow = _this.renderProjectSmallRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderProjectForm = _this.renderProjectForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.subscriptions = [];\n    return _this;\n  }\n\n  _createClass(ClientProject, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchSubscription();\n      this.fetchProjects();\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var $this = this;\n      this.fetchSubscription().then(function (response) {\n        console.log(response);\n        $this.subscriptions = response.data.data;\n        $this.setState({\n          modal: !$this.state.modal\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"fetchProjects\",\n    value: function fetchProjects() {\n      var $this = this;\n      this.props.authAxios({\n        method: \"get\",\n        url: \"/api/v1/clients/\".concat(this.props.client.id, \"/client_projects\"),\n        data: {},\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      }).then(function (response) {\n        console.log(response);\n        $this.setState({\n          projects: response.data.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal() {\n      if (this.state.modal) {\n        console.log(this.subscriptions);\n        return React.createElement(HocForm, {\n          toggle: this.toggle,\n          modal: this.state.modal,\n          formFields: ProjectFields,\n          FormView: this.renderProjectForm,\n          isFilled: false,\n          submitCall: this.addProjectCall,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"fetchSubscription\",\n    value: function fetchSubscription() {\n      var $this = this;\n      return this.props.authAxios({\n        method: \"get\",\n        url: \"/api/v1/clients/\".concat(this.props.client.id, \"/client_subscriptions\"),\n        data: {},\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      });\n    }\n  }, {\n    key: \"addProjectToState\",\n    value: function addProjectToState(project) {\n      console.log(project);\n      var projects = this.state.projects;\n      projects.push(project);\n      this.setState({\n        projects: projects\n      });\n    }\n  }, {\n    key: \"addProjectCall\",\n    value: function addProjectCall(formData) {\n      this.toggle();\n      formData.user_id = this.props.client.id;\n      this.props.authAxios({\n        method: \"post\",\n        url: \"/api/v1/projects\",\n        data: {\n          project: formData\n        },\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      }).then(function (response) {\n        console.log(response);\n        this.addProjectToState(response.data.data);\n      }.bind(this)).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"renderProjectSmallRow\",\n    value: function renderProjectSmallRow(props) {\n      return React.createElement(ProjectSmallRow, Object.assign({}, props, {\n        match: this.props.match,\n        key: this.props.client.id + props.subject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderProjectForm\",\n    value: function renderProjectForm(props) {\n      return React.createElement(ProjectForm, Object.assign({}, props, {\n        subscriptions: this.subscriptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var listColumn = [\"Project ID\", \"Subject\", \"Stage\"];\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"heading-with-wrapper heading-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), \"Projects\", React.createElement(\"button\", {\n        className: \"au-btn au-btn-icon au-btn--pink btn-lg\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#modal_project\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus\",\n        style: {\n          fontSize: 15,\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), \"Add\")), React.createElement(ListingTable, {\n        isCheckBox: true,\n        listColumn: listColumn,\n        list: this.state.projects,\n        listRow: this.renderProjectSmallRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), this.showModal());\n    }\n  }]);\n\n  return ClientProject;\n}(Component);\n\nexport { ClientProject as default };","map":{"version":3,"sources":["/home/lala/spalifeandstory/src/components/Project/ClientProject.js"],"names":["React","Component","HocForm","ProjectFields","ProjectForm","ListingTable","ProjectSmallRow","ClientProject","props","state","modal","projects","toggle","bind","addProjectCall","fetchSubscription","showModal","renderProjectSmallRow","renderProjectForm","subscriptions","fetchProjects","$this","then","response","console","log","data","setState","catch","error","authAxios","method","url","client","id","headers","project","push","formData","user_id","addProjectToState","match","subject","listColumn","fontSize","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport HocForm from \"../Shared/HocForm\";\nimport { ProjectFields } from \"../../Utilities/FormsModel\";\nimport ProjectForm from \"./ProjectForm\";\nimport ListingTable from \"../Shared/ListingTable\";\nimport ProjectSmallRow from \"./ProjectSmallRow\";\n\nexport default class ClientProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      projects: []\n    };\n    this.toggle = this.toggle.bind(this);\n    this.addProjectCall = this.addProjectCall.bind(this);\n    this.fetchSubscription = this.fetchSubscription.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.renderProjectSmallRow = this.renderProjectSmallRow.bind(this);\n    this.renderProjectForm = this.renderProjectForm.bind(this);\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    this.fetchSubscription();\n    this.fetchProjects();\n  }\n\n  toggle() {\n    const $this = this;\n    this.fetchSubscription()\n      .then(function(response) {\n        console.log(response);\n        $this.subscriptions = response.data.data;\n        $this.setState({\n          modal: !$this.state.modal\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  fetchProjects() {\n    const $this = this;\n    this.props\n      .authAxios({\n        method: \"get\",\n        url: `/api/v1/clients/${this.props.client.id}/client_projects`,\n        data: {},\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      .then(function(response) {\n        console.log(response);\n        $this.setState({\n          projects: response.data.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  showModal() {\n    if (this.state.modal) {\n      console.log(this.subscriptions);\n      return (\n        <HocForm\n          toggle={this.toggle}\n          modal={this.state.modal}\n          formFields={ProjectFields}\n          FormView={this.renderProjectForm}\n          isFilled={false}\n          submitCall={this.addProjectCall}\n        />\n      );\n    }\n  }\n\n  fetchSubscription() {\n    let $this = this;\n    return this.props.authAxios({\n      method: \"get\",\n      url: `/api/v1/clients/${this.props.client.id}/client_subscriptions`,\n      data: {},\n      headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    });\n  }\n\n  addProjectToState(project) {\n    console.log(project);\n    let projects = this.state.projects;\n    projects.push(project);\n    this.setState({\n      projects: projects\n    });\n  }\n\n  addProjectCall(formData) {\n    this.toggle();\n    formData.user_id = this.props.client.id;\n    this.props\n      .authAxios({\n        method: \"post\",\n        url: `/api/v1/projects`,\n        data: {\n          project: formData\n        },\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      .then(\n        function(response) {\n          console.log(response);\n          this.addProjectToState(response.data.data);\n        }.bind(this)\n      )\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  renderProjectSmallRow(props) {\n    return (\n      <ProjectSmallRow\n        {...props}\n        match={this.props.match}\n        key={this.props.client.id + props.subject}\n      />\n    );\n  }\n\n  renderProjectForm(props) {\n    return <ProjectForm {...props} subscriptions={this.subscriptions} />;\n  }\n\n  render() {\n    const listColumn = [\"Project ID\", \"Subject\", \"Stage\"];\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <h3 className=\"heading-with-wrapper heading-button\">\n            <i className=\"fa fa-circle-o\" />\n            Projects\n            <button\n              className=\"au-btn au-btn-icon au-btn--pink btn-lg\"\n              data-toggle=\"modal\"\n              data-target=\"#modal_project\"\n              onClick={this.toggle}\n            >\n              <i\n                className=\"fa fa-plus\"\n                style={{ fontSize: 15, color: \"white\" }}\n              />\n              Add\n            </button>\n          </h3>\n          <ListingTable\n            isCheckBox={true}\n            listColumn={listColumn}\n            list={this.state.projects}\n            listRow={this.renderProjectSmallRow}\n          />\n        </div>\n        {this.showModal()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}