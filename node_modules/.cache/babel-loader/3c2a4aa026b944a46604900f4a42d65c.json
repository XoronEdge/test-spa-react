{"ast":null,"code":"import _defineProperty from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/lala/spalifeandstory/src/components/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport LoginLayout from \"./LoginLayout\";\nimport HocForm from \"../Shared/HocForm\";\nimport LoginForm from \"./LoginForm\";\nimport { LoginFields } from \"../../Utilities/FormsModel\";\nimport MakeContextConsumer from \"../Auth/MakeContextConsumer\";\nimport AuthCredentials from \"../Auth/AuthCredentials\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(data) {\n      console.log(data);\n      this.getAuthenticate(data);\n    }\n  }, {\n    key: \"getAuthenticate\",\n    value: function getAuthenticate(credentials) {\n      var $this = this;\n      axios({\n        method: \"post\",\n        url: \"/api/v1/auth/sign_in\",\n        data: {\n          email: credentials.email,\n          password: credentials.password\n        }\n      }).then(function (response) {\n        console.log(response);\n        var authData = new AuthCredentials(true, response.headers[\"access-token\"], response.headers.client, response.headers.uid, response.headers[\"token-type\"], response.headers.expiry);\n        $this.props.getAuthenticate(authData);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.location);\n\n      if (this.props.authData.isAuthenticated && this.props.authData.uid || true) {\n        return React.createElement(Redirect, {\n          to: \"/home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(LoginLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(HocForm, {\n        formFields: LoginFields,\n        FormView: LoginForm,\n        submitCall: this.handleSubmit,\n        isFilled: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default MakeContextConsumer(withRouter(Login));","map":{"version":3,"sources":["/home/lala/spalifeandstory/src/components/Login/Login.js"],"names":["React","Component","axios","withRouter","Redirect","LoginLayout","HocForm","LoginForm","LoginFields","MakeContextConsumer","AuthCredentials","Login","props","state","email","password","handleChange","bind","handleSubmit","event","setState","target","name","value","data","console","log","getAuthenticate","credentials","$this","method","url","then","response","authData","headers","client","uid","expiry","location","isAuthenticated"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AAPiB;AAQlB;;;;iCAEYE,K,EAAO;AAClB,WAAKC,QAAL,qBACGD,KAAK,CAACE,MAAN,CAAaC,IADhB,EACuBH,KAAK,CAACE,MAAN,CAAaE,KADpC;AAGD;;;iCAEYC,I,EAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,eAAL,CAAqBH,IAArB;AACD;;;oCAEeI,W,EAAa;AAC3B,UAAMC,KAAK,GAAG,IAAd;AACA3B,MAAAA,KAAK,CAAC;AACJ4B,QAAAA,MAAM,EAAE,MADJ;AAEJC,QAAAA,GAAG,EAAE,sBAFD;AAGJP,QAAAA,IAAI,EAAE;AACJV,UAAAA,KAAK,EAAEc,WAAW,CAACd,KADf;AAEJC,UAAAA,QAAQ,EAAEa,WAAW,CAACb;AAFlB;AAHF,OAAD,CAAL,CAOGiB,IAPH,CAOQ,UAASC,QAAT,EAAmB;AACzBR,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACA,YAAMC,QAAQ,GAAG,IAAIxB,eAAJ,CACf,IADe,EAEfuB,QAAQ,CAACE,OAAT,CAAiB,cAAjB,CAFe,EAGfF,QAAQ,CAACE,OAAT,CAAiBC,MAHF,EAIfH,QAAQ,CAACE,OAAT,CAAiBE,GAJF,EAKfJ,QAAQ,CAACE,OAAT,CAAiB,YAAjB,CALe,EAMfF,QAAQ,CAACE,OAAT,CAAiBG,MANF,CAAjB;AAQAT,QAAAA,KAAK,CAACjB,KAAN,CAAYe,eAAZ,CAA4BO,QAA5B;AACD,OAlBD;AAmBD;;;6BAEQ;AACPT,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAW2B,QAAvB;;AACA,UACG,KAAK3B,KAAL,CAAWsB,QAAX,CAAoBM,eAApB,IAAuC,KAAK5B,KAAL,CAAWsB,QAAX,CAAoBG,GAA5D,IACA,IAFF,EAGE;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,UAAU,EAAE7B,WADd;AAEE,QAAA,QAAQ,EAAED,SAFZ;AAGE,QAAA,UAAU,EAAE,KAAKW,YAHnB;AAIE,QAAA,QAAQ,EAAE,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;;;EA/DiBjB,S;;AAiEpB,eAAeQ,mBAAmB,CAACN,UAAU,CAACQ,KAAD,CAAX,CAAlC","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n\nimport LoginLayout from \"./LoginLayout\";\nimport HocForm from \"../Shared/HocForm\";\nimport LoginForm from \"./LoginForm\";\nimport { LoginFields } from \"../../Utilities/FormsModel\";\nimport MakeContextConsumer from \"../Auth/MakeContextConsumer\";\nimport AuthCredentials from \"../Auth/AuthCredentials\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(data) {\n    console.log(data);\n    this.getAuthenticate(data);\n  }\n\n  getAuthenticate(credentials) {\n    const $this = this;\n    axios({\n      method: \"post\",\n      url: \"/api/v1/auth/sign_in\",\n      data: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }).then(function(response) {\n      console.log(response);\n      const authData = new AuthCredentials(\n        true,\n        response.headers[\"access-token\"],\n        response.headers.client,\n        response.headers.uid,\n        response.headers[\"token-type\"],\n        response.headers.expiry\n      );\n      $this.props.getAuthenticate(authData);\n    });\n  }\n\n  render() {\n    console.log(this.props.location);\n    if (\n      (this.props.authData.isAuthenticated && this.props.authData.uid) ||\n      true\n    ) {\n      return <Redirect to=\"/home\" />;\n    }\n    return (\n      <LoginLayout>\n        <HocForm\n          formFields={LoginFields}\n          FormView={LoginForm}\n          submitCall={this.handleSubmit}\n          isFilled={false}\n        />\n      </LoginLayout>\n    );\n  }\n}\nexport default MakeContextConsumer(withRouter(Login));\n"]},"metadata":{},"sourceType":"module"}