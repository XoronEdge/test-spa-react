{"ast":null,"code":"import _classCallCheck from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/lala/spalifeandstory/src/components/Project/Project.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport ProjectListing from \"./ProjectListing\";\nimport ProjectWorkflow from \"./ProjectWorkflow\";\nimport MakeContextConsumer from \"../Auth/MakeContextConsumer\";\n\nvar Project =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Project, _Component);\n\n  function Project(props) {\n    var _this;\n\n    _classCallCheck(this, Project);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Project).call(this, props));\n    _this.state = {\n      projects: []\n    };\n    _this.fecthProjects = _this.fecthProjects.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.populateProjects = _this.populateProjects.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateProject = _this.updateProject.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateProjects = _this.updateProjects.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderToProjectListing = _this.renderToProjectListing.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Project, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fecthProjects();\n    }\n  }, {\n    key: \"populateProjects\",\n    value: function populateProjects(projects) {\n      console.log(projects);\n      this.setState({\n        projects: projects.data.data\n      });\n    }\n  }, {\n    key: \"updateProjects\",\n    value: function updateProjects(projects) {\n      console.log(projects);\n      this.setState({\n        projects: projects\n      });\n    }\n  }, {\n    key: \"fecthProjects\",\n    value: function fecthProjects() {\n      this.props.authAxios({\n        method: \"get\",\n        url: \"/api/v1/projects\"\n      }).then(this.populateProjects);\n    }\n  }, {\n    key: \"updateProject\",\n    value: function updateProject(project) {\n      var _this2 = this;\n\n      console.log(project);\n      var currentProject = project;\n      var projects = this.state.projects;\n      projects.map(function (project, index) {\n        if (project.id == currentProject.id) {\n          projects[index] = currentProject;\n\n          _this2.setState({\n            projects: projects\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getProject\",\n    value: function getProject(id) {\n      var currentProject;\n      this.state.projects.map(function (project) {\n        if (project.id == id) {\n          currentProject = project;\n        }\n      });\n      return currentProject;\n    }\n  }, {\n    key: \"renderToProjectListing\",\n    value: function renderToProjectListing() {\n      return React.createElement(ProjectListing, {\n        projects: this.state.projects,\n        match: this.props.match,\n        updateContent: this.updateProjects,\n        authAxios: this.props.authAxios,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var match = this.props.match;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"\".concat(match.path),\n        exact: true,\n        component: this.renderToProjectListing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:id/projectworkflow\"),\n        component: function component(props) {\n          return React.createElement(ProjectWorkflow, Object.assign({}, props, {\n            content: _this3.getProject(props.match.params.id),\n            updateProject: _this3.updateProject,\n            contentType: \"project\",\n            authAxios: _this3.props.authAxios,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Project;\n}(Component);\n\nexport default MakeContextConsumer(Project);","map":{"version":3,"sources":["/home/lala/spalifeandstory/src/components/Project/Project.js"],"names":["React","Component","Fragment","Route","ProjectListing","ProjectWorkflow","MakeContextConsumer","Project","props","state","projects","fecthProjects","bind","populateProjects","updateProject","updateProjects","renderToProjectListing","console","log","setState","data","authAxios","method","url","then","project","currentProject","map","index","id","match","path","getProject","params"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport ProjectListing from \"./ProjectListing\";\nimport ProjectWorkflow from \"./ProjectWorkflow\";\nimport MakeContextConsumer from \"../Auth/MakeContextConsumer\";\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: []\n    };\n    this.fecthProjects = this.fecthProjects.bind(this);\n    this.populateProjects = this.populateProjects.bind(this);\n    this.updateProject = this.updateProject.bind(this);\n    this.updateProjects = this.updateProjects.bind(this);\n    this.renderToProjectListing = this.renderToProjectListing.bind(this);\n  }\n\n  componentDidMount() {\n    this.fecthProjects();\n  }\n\n  populateProjects(projects) {\n    console.log(projects);\n    this.setState({\n      projects: projects.data.data\n    });\n  }\n\n  updateProjects(projects) {\n    console.log(projects);\n    this.setState({\n      projects: projects\n    });\n  }\n\n  fecthProjects() {\n    this.props\n      .authAxios({\n        method: \"get\",\n        url: \"/api/v1/projects\"\n      })\n      .then(this.populateProjects);\n  }\n\n  updateProject(project) {\n    console.log(project);\n    let currentProject = project;\n    let projects = this.state.projects;\n    projects.map((project, index) => {\n      if (project.id == currentProject.id) {\n        projects[index] = currentProject;\n        this.setState({\n          projects: projects\n        });\n      }\n    });\n  }\n\n  getProject(id) {\n    let currentProject;\n    this.state.projects.map(function(project) {\n      if (project.id == id) {\n        currentProject = project;\n      }\n    });\n    return currentProject;\n  }\n\n  renderToProjectListing() {\n    return (\n      <ProjectListing\n        projects={this.state.projects}\n        match={this.props.match}\n        updateContent={this.updateProjects}\n        authAxios={this.props.authAxios}\n      />\n    );\n  }\n  render() {\n    const { match } = this.props;\n    return (\n      <Fragment>\n        <Route\n          path={`${match.path}`}\n          exact\n          component={this.renderToProjectListing}\n        />\n        <Route\n          path={`${match.path}/:id/projectworkflow`}\n          component={props => {\n            return (\n              <ProjectWorkflow\n                {...props}\n                content={this.getProject(props.match.params.id)}\n                updateProject={this.updateProject}\n                contentType=\"project\"\n                authAxios={this.props.authAxios}\n              />\n            );\n          }}\n        />\n      </Fragment>\n    );\n  }\n}\nexport default MakeContextConsumer(Project);\n"]},"metadata":{},"sourceType":"module"}