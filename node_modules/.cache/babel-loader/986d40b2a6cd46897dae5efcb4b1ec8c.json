{"ast":null,"code":"var _jsxFileName = \"/home/lala/spalifeandstory/src/components/Project/Memory/AddMemoryForm.js\";\nimport React from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\n\nfunction handleDate(day, handleChange, name) {\n  var e = {\n    target: {\n      name: name,\n      value: day\n    },\n    preventDefault: function preventDefault() {\n      return \"\";\n    }\n  };\n  return handleChange(e);\n}\n\nvar AddMemoryForm = function AddMemoryForm(props) {\n  var modal = props.modal,\n      toggle = props.toggle,\n      onModalClosed = props.onModalClosed,\n      handleChange = props.handleChange,\n      handleSubmit = props.handleSubmit,\n      fieldState = props.fieldState;\n  return React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    style: {\n      maxWidth: 1110\n    },\n    onClosed: onModalClosed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Add New Memory\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    action: \"\",\n    method: \"post\",\n    novalidate: \"novalidate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col-md-12 col-sm-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"\",\n    class: \"control-label mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Memory Name\"), React.createElement(\"input\", {\n    name: \"name\",\n    type: \"text\",\n    class: \"form-control\",\n    value: fieldState.name.value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), fieldState.name.error ? React.createElement(\"small\", {\n    id: \"first-name-error\",\n    className: \"form-text form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Name Is Not Valid\") : \"\"), React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"\",\n    class: \"control-label mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"div\", {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(DatePicker, {\n    selected: fieldState.memory_date.value,\n    onChange: function onChange(date) {\n      handleDate(date, handleChange, \"memory_date\");\n    },\n    placeholderText: \"Select Memory Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), fieldState.memory_date.error ? React.createElement(\"small\", {\n    id: \"first-name-error\",\n    className: \"form-text form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Memory Date Is Required\") : \"\"), React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"\",\n    class: \"control-label mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Memory\"), React.createElement(\"textarea\", {\n    name: \"description\",\n    class: \"form-control\",\n    value: fieldState.description.value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), fieldState.description.error ? React.createElement(\"small\", {\n    id: \"first-name-error\",\n    className: \"form-text form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Description Is Not Valid\") : \"\"), React.createElement(\"div\", {\n    class: \"form-btn-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"payment-button\",\n    type: \"submit\",\n    class: \"btn btn-primary btn-lg\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"zmdi zmdi-plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), \"Add\")))))));\n};\n\nexport default AddMemoryForm;","map":{"version":3,"sources":["/home/lala/spalifeandstory/src/components/Project/Memory/AddMemoryForm.js"],"names":["React","Modal","ModalHeader","ModalBody","DatePicker","handleDate","day","handleChange","name","e","target","value","preventDefault","AddMemoryForm","props","modal","toggle","onModalClosed","handleSubmit","fieldState","maxWidth","error","memory_date","date","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\n\nfunction handleDate(day, handleChange, name) {\n  let e = {\n    target: {\n      name: name,\n      value: day\n    },\n    preventDefault: () => {\n      return \"\";\n    }\n  };\n  return handleChange(e);\n}\nconst AddMemoryForm = props => {\n  const {\n    modal,\n    toggle,\n    onModalClosed,\n    handleChange,\n    handleSubmit,\n    fieldState\n  } = props;\n  return (\n    <Modal\n      isOpen={modal}\n      toggle={toggle}\n      style={{ maxWidth: 1110 }}\n      onClosed={onModalClosed}\n    >\n      <ModalHeader toggle={toggle}>Add New Memory</ModalHeader>\n\n      <ModalBody>\n        <form action=\"\" method=\"post\" novalidate=\"novalidate\">\n          <div class=\"row\">\n            <div class=\"col-md-12 col-sm-12\">\n              <div class=\"form-group\">\n                <label htmlFor=\"\" class=\"control-label mb-1\">\n                  Memory Name\n                </label>\n                <input\n                  name=\"name\"\n                  type=\"text\"\n                  class=\"form-control\"\n                  value={fieldState.name.value}\n                  onChange={handleChange}\n                />\n                {fieldState.name.error ? (\n                  <small id=\"first-name-error\" className=\"form-text form-error\">\n                    Name Is Not Valid\n                  </small>\n                ) : (\n                  \"\"\n                )}\n              </div>\n\n              <div class=\"form-group\">\n                <label htmlFor=\"\" class=\"control-label mb-1\">\n                  Date\n                </label>\n                <div className=\"w-100\" />\n                <DatePicker\n                  selected={fieldState.memory_date.value}\n                  onChange={date => {\n                    handleDate(date, handleChange, \"memory_date\");\n                  }}\n                  placeholderText=\"Select Memory Date\"\n                />\n                {fieldState.memory_date.error ? (\n                  <small id=\"first-name-error\" className=\"form-text form-error\">\n                    Memory Date Is Required\n                  </small>\n                ) : (\n                  \"\"\n                )}\n              </div>\n\n              <div class=\"form-group\">\n                <label htmlFor=\"\" class=\"control-label mb-1\">\n                  Memory\n                </label>\n                <textarea\n                  name=\"description\"\n                  class=\"form-control\"\n                  value={fieldState.description.value}\n                  onChange={handleChange}\n                />\n                {fieldState.description.error ? (\n                  <small id=\"first-name-error\" className=\"form-text form-error\">\n                    Description Is Not Valid\n                  </small>\n                ) : (\n                  \"\"\n                )}\n              </div>\n\n              <div class=\"form-btn-footer\">\n                <button\n                  id=\"payment-button\"\n                  type=\"submit\"\n                  class=\"btn btn-primary btn-lg\"\n                  onClick={handleSubmit}\n                >\n                  <i class=\"zmdi zmdi-plus\" />\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </ModalBody>\n    </Modal>\n  );\n};\nexport default AddMemoryForm;\n"]},"metadata":{},"sourceType":"module"}