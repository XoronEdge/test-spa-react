{"ast":null,"code":"import _classCallCheck from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/lala/spalifeandstory/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/lala/spalifeandstory/src/components/Shared/Comment/Comment.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CommentForm from \"./CommentForm\";\nimport CommentRow from \"./CommentRow\";\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comment, _Component);\n\n  function Comment(props) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, props));\n    _this.state = {\n      comments: []\n    };\n    _this.updateContent = _this.updateContent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeCommentCall = _this.removeCommentCall.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeContent = _this.removeContent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderCommentRow = _this.renderCommentRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var $this = this;\n      axios({\n        method: \"get\",\n        url: \"/api/v1/\".concat(this.props.owner, \"/\").concat(this.props.ownerId, \"/comments\")\n      }).then(function (response) {\n        $this.setState({\n          comments: response.data.data\n        });\n      });\n    }\n  }, {\n    key: \"updateContent\",\n    value: function updateContent(comment) {\n      console.log(comment);\n      var comments = this.state.comments;\n      comments.push(comment);\n      this.setState({\n        comments: comments\n      });\n    }\n  }, {\n    key: \"removeCommentCall\",\n    value: function removeCommentCall(commentId) {\n      var $this = this;\n      console.log(\"remove component\");\n      axios({\n        method: \"delete\",\n        url: \"/api/v1/\".concat(this.props.owner, \"/\").concat(commentId, \"/remove_comment\")\n      }).then(function (response) {\n        $this.removeContent(commentId);\n      });\n    }\n  }, {\n    key: \"removeContent\",\n    value: function removeContent(commentId) {\n      var _this2 = this;\n\n      var comments = this.state.comments;\n      comments.map(function (comment, index) {\n        if (comment.id == commentId) {\n          comments.splice(index, 1);\n\n          _this2.setState({\n            comments: comments\n          });\n        }\n      });\n    }\n  }, {\n    key: \"renderCommentRow\",\n    value: function renderCommentRow(comment) {\n      return React.createElement(CommentRow, {\n        comment: comment,\n        key: comment.id,\n        removeCommentCall: this.removeCommentCall,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"box-with-padding leads-comments-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comments-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fos message-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.comments.length), \"Comments\", React.createElement(CommentForm, {\n        updateContent: this.updateContent,\n        ownerId: this.props.ownerId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"comment-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.comments.map(this.renderCommentRow)))));\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport { Comment as default };","map":{"version":3,"sources":["/home/lala/spalifeandstory/src/components/Shared/Comment/Comment.js"],"names":["React","Component","axios","CommentForm","CommentRow","Comment","props","state","comments","updateContent","bind","removeCommentCall","removeContent","renderCommentRow","$this","method","url","owner","ownerId","then","response","setState","data","comment","console","log","push","commentId","map","index","id","splice","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport CommentForm from \"./CommentForm\";\nimport CommentRow from \"./CommentRow\";\n\nexport default class Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: []\n    };\n    this.updateContent = this.updateContent.bind(this);\n    this.removeCommentCall = this.removeCommentCall.bind(this);\n    this.removeContent = this.removeContent.bind(this);\n    this.renderCommentRow = this.renderCommentRow.bind(this);\n  }\n\n  componentDidMount() {\n    const $this = this;\n    axios({\n      method: \"get\",\n      url: `/api/v1/${this.props.owner}/${this.props.ownerId}/comments`\n    }).then(function(response) {\n      $this.setState({\n        comments: response.data.data\n      });\n    });\n  }\n\n  updateContent(comment) {\n    console.log(comment);\n    let comments = this.state.comments;\n    comments.push(comment);\n    this.setState({\n      comments: comments\n    });\n  }\n\n  removeCommentCall(commentId) {\n    const $this = this;\n    console.log(\"remove component\");\n    axios({\n      method: \"delete\",\n      url: `/api/v1/${this.props.owner}/${commentId}/remove_comment`\n    }).then(function(response) {\n      $this.removeContent(commentId);\n    });\n  }\n\n  removeContent(commentId) {\n    let comments = this.state.comments;\n    comments.map((comment, index) => {\n      if (comment.id == commentId) {\n        comments.splice(index, 1);\n        this.setState({\n          comments: comments\n        });\n      }\n    });\n  }\n\n  renderCommentRow(comment) {\n    return (\n      <CommentRow\n        comment={comment}\n        key={comment.id}\n        removeCommentCall={this.removeCommentCall}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"box-with-padding leads-comments-wrapper\">\n        <div className=\"comments-count\">\n          <i className=\"fos message-icon\" />\n          <span>{this.state.comments.length}</span>Comments\n          <CommentForm\n            updateContent={this.updateContent}\n            ownerId={this.props.ownerId}\n          />\n          <div className=\"comment-list\">\n            <ul>{this.state.comments.map(this.renderCommentRow)}</ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}